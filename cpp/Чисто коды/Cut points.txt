#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair <ll, ll> pll;

const ll N = 2e5 + 8;
const ll INF = INT_MAX;

ll n, m;
vector <vector <ll>> g(N);
vector <bool> used(N, false);
set <ll> b;
vector <ll> tin(N), fup(N, INF);
ll T = 0;

void DFS(ll v, ll p = -1) {
    used[v] = true;
    tin[v] = fup[v] = T++;
    ll cnt = 0;
    for (ll to : g[v]) {
        if (to == p) {
            continue;
        }
        if (used[to]) {
            fup[v] = min(fup[v], tin[to]);
        } else {
            ++cnt;
            DFS(to, v);
            fup[v] = min(fup[v], fup[to]);
            if (fup[to] >= tin[v] && p != -1) {
                b.insert(v);
            }
        }
    }
    if (p == -1 && cnt > 1) {
        b.insert(v);
    }
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    cin >> n >> m;
    for (ll i = 0; i < m; ++i) {
        ll v, u;
        cin >> v >> u;
        --v, --u;
        g[v].push_back(u);
        g[u].push_back(v);
    }
    for (ll i = 0; i < n; ++i) {
        if (!used[i]) {
            DFS(i);
        }
    }
    cout << b.size() << endl;
    for (ll i : b) {
        cout << i + 1 << ' ';
    }
    return 0;
}

/**


**/
