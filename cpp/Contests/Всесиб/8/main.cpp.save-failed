#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef pair <ll, ll> pll;

ll n, m;
set <pll> a[2];
bool ptr = false;

void solve(char x) {
    if (x == 'R') {
        for (pll i : a[ptr]) {
            if (i.second < m - 1) {
                a[ptr ^ 1].insert({i.first, i.second + 1});
            }
        }
    } else if (x == 'U') {
        for (pll i : a[ptr]) {
            if (i.first > 0) {
                a[ptr ^ 1].insert({i.first - 1, i.second});
            }
        }
    } else if (x == 'L') {
        for (pll i : a[ptr]) {
            if (i.second > 0) {
                a[ptr ^ 1].insert({i.first, i.second - 1});
            }
        }
    } else if (x == 'D') {
        for (pll i : a[ptr]) {
            if (i.first < n - 1) {
                a[ptr ^ 1].insert({i.first + 1, i.second});
            }
        }
    } else {
        for (pll i : a[ptr]) {
            if (i.second < m - 1) {
                a[ptr ^ 1].insert({i.first, i.second + 1});
            }
            if (i.first > 0) {
                a[ptr ^ 1].insert({i.first - 1, i.second});
            }
            if (i.second > 0) {
                a[ptr ^ 1].insert({i.first, i.second - 1});
            }
            if (i.first < n - 1) {
                a[ptr ^ 1].insert({i.first + 1, i.second});
            }
        }
    }
    a[ptr].clear();
    ptr ^= true;
}

int main()
{
    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    ///freopen("input.txt", "r", stdin);
    ///freopen("output.txt", "w", stdout);
    cin >> n >> m;
    ll x, y;
    cin >> x >> y;
    --x, --y;
    a[ptr].insert({x, y});
    string s;
    cin >> s;
    for (char i : s) {
        solve(i);
    }
    vector <vector <bool>> ans(n + 1, vector <bool>(m + 1, false));
    for (pll i : a[ptr]) {
        ans[i.first][i.second] = true;
    }
    for (ll i = 0; i < n; ++i) {
        for (ll j = 0; j < m; ++j) {
            cout << ans[i][j];
        }
        cout << endl;
    }
    return 0;
}

/**


**/
